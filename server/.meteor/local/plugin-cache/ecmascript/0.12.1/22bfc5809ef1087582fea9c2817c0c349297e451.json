{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"S:\\Document\\IG5\\AWI\\Prello\\AWI_Project_Prello\\server\\api\\BoardsRoutes.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.windows.x86_64"},"sourceFileName":"api/BoardsRoutes.js","filename":"S:\\Document\\IG5\\AWI\\Prello\\AWI_Project_Prello\\server\\api\\BoardsRoutes.js","passPerPreset":false,"envName":"development","cwd":"S:\\Document\\IG5\\AWI\\Prello\\AWI_Project_Prello\\server","root":"S:\\Document\\IG5\\AWI\\Prello\\AWI_Project_Prello\\server","presets":[],"generatorOpts":{"filename":"S:\\Document\\IG5\\AWI\\Prello\\AWI_Project_Prello\\server\\api\\BoardsRoutes.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"api/BoardsRoutes.js"}},"code":"let Boards;\nmodule.link(\"../models/Boards\", {\n  Boards(v) {\n    Boards = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 2);\nlet JsonRoutes;\nmodule.link(\"meteor/simple:json-routes\", {\n  JsonRoutes(v) {\n    JsonRoutes = v;\n  }\n\n}, 3);\nMeteor.methods({\n  'createBoard'({\n    boardName,\n    privacy\n  }) {\n    /*if(!Meteor.userId()){\r\n        throw new Meteor.Error('Not Authorized')\r\n    }else{*/\n    let privacyInt = parseInt(privacy);\n    let id = Random.id();\n    return Boards.insert({\n      boardId: id,\n      boardTitle: boardName,\n      boardPrivacy: privacyInt,\n      boardUser: [Meteor.user()]\n    });\n  },\n\n  'getBoard'({\n    idBoard\n  }) {\n    let board;\n    let countDoc = Boards.find({\n      \"boardId\": idBoard\n    }).count();\n    console.log(countDoc);\n\n    if (countDoc === 1) {\n      board = Boards.findOne({\n        \"boardId\": idBoard\n      });\n      return board;\n    } else {\n      throw new Meteor.Error(404, 'Board not found');\n    }\n  },\n\n  'deleteBoard'({\n    idBoard\n  }) {},\n\n  'editBoard'({\n    idBoard,\n    newParams\n  }) {},\n\n  'getAllBoards'({\n    idUser\n  }) {}\n\n}); // code to run on server at startup\n\nJsonRoutes.Middleware.use(function (req, res, next) {\n  if (req.query.error) {\n    JsonRoutes.sendResult(res, {\n      code: 401,\n      data: {\n        result: \"ERROR\"\n      }\n    });\n  }\n\n  next();\n});\nJsonRoutes.add('post', '/signUp/', function (req, res, next) {\n  console.log(req);\n  Meteor.users.insert({\n    username: req.body.state.username,\n    firstname: req.body.state.firstname,\n    lastname: req.body.state.lastname,\n    password: req.body.state.password,\n    email: req.body.state.email\n  });\n  JsonRoutes.sendResult(res, {\n    data: {\n      result: Meteor.users.find().fetch()\n    }\n  });\n});","map":{"version":3,"sources":["api/BoardsRoutes.js"],"names":["Boards","module","link","v","Meteor","Random","JsonRoutes","methods","boardName","privacy","privacyInt","parseInt","id","insert","boardId","boardTitle","boardPrivacy","boardUser","user","idBoard","board","countDoc","find","count","console","log","findOne","Error","newParams","idUser","Middleware","use","req","res","next","query","error","sendResult","code","data","result","add","users","username","body","state","firstname","lastname","password","email","fetch"],"mappings":"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","sourcesContent":["import {Boards} from \"../models/Boards\";\r\nimport {Meteor} from \"meteor/meteor\";\r\nimport { Random } from 'meteor/random';\r\nimport { JsonRoutes } from 'meteor/simple:json-routes';\r\n\r\nMeteor.methods({\r\n    'createBoard'({boardName, privacy}) {\r\n        /*if(!Meteor.userId()){\r\n            throw new Meteor.Error('Not Authorized')\r\n        }else{*/\r\n        let privacyInt = parseInt(privacy)\r\n        let id = Random.id();\r\n        return Boards.insert({boardId: id, boardTitle: boardName, boardPrivacy: privacyInt, boardUser: [Meteor.user()]})\r\n    },\r\n\r\n    'getBoard' ({idBoard}) {\r\n        let board;\r\n        let countDoc = Boards.find({\"boardId\": idBoard}).count();\r\n        console.log(countDoc)\r\n        if (countDoc === 1) {\r\n            board = Boards.findOne({\"boardId\": idBoard});\r\n            return board;\r\n        } else {\r\n            throw new Meteor.Error(404, 'Board not found')\r\n        }\r\n\r\n    },\r\n    'deleteBoard'({idBoard}) {\r\n\r\n    },\r\n\r\n    'editBoard' ({idBoard,newParams}) {\r\n\r\n    },\r\n\r\n    'getAllBoards' ({idUser}){\r\n\r\n    }\r\n})\r\n\r\n// code to run on server at startup\r\nJsonRoutes.Middleware.use(function(req, res, next) {\r\n    if(req.query.error) {\r\n        JsonRoutes.sendResult(res, {\r\n            code: 401,\r\n            data: {\r\n                result: \"ERROR\"\r\n            }\r\n        })\r\n    }\r\n\r\n    next();\r\n});\r\n\r\n\r\nJsonRoutes.add('post', '/signUp/', function(req, res, next) {\r\n    console.log(req)\r\n    Meteor.users.insert({\r\n        username: req.body.state.username,\r\n        firstname: req.body.state.firstname,\r\n        lastname: req.body.state.lastname,\r\n        password: req.body.state.password,\r\n        email: req.body.state.email\r\n    })\r\n    JsonRoutes.sendResult(res, {\r\n        data: {\r\n            result: Meteor.users.find().fetch()\r\n        }\r\n    });\r\n});\r\n\r\n\r\n"]},"sourceType":"script","hash":"22bfc5809ef1087582fea9c2817c0c349297e451"}
