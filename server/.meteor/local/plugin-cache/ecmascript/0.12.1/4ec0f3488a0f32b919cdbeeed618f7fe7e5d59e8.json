{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"S:\\Document\\IG5\\AWI\\Prello\\AWI_Project_Prello\\server\\api\\BoardsRoutes.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"api/BoardsRoutes.js","filename":"S:\\Document\\IG5\\AWI\\Prello\\AWI_Project_Prello\\server\\api\\BoardsRoutes.js","passPerPreset":false,"envName":"development","cwd":"S:\\Document\\IG5\\AWI\\Prello\\AWI_Project_Prello\\server","root":"S:\\Document\\IG5\\AWI\\Prello\\AWI_Project_Prello\\server","generatorOpts":{"filename":"S:\\Document\\IG5\\AWI\\Prello\\AWI_Project_Prello\\server\\api\\BoardsRoutes.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"api/BoardsRoutes.js"}},"code":"let Boards;\nmodule.link(\"../models/Boards\", {\n  Boards(v) {\n    Boards = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet Random;\nmodule.link(\"asteroid\", {\n  \"*\"(v) {\n    Random = v;\n  }\n\n}, 2);\nMeteor.publish('boards', function () {\n  return Boards.find();\n});\nMeteor.methods({\n  'board.createBoard'(boardName) {\n    return Boards.insert({\n      boardId: id,\n      boardTitle: boardName,\n      boardPrivacy: 1,\n      boardUser: [Meteor.user()]\n    });\n  },\n\n  'board.getBoard'(_ref) {\n    let {\n      idBoard\n    } = _ref;\n    let board;\n    let countDoc = Boards.find({\n      \"boardId\": idBoard\n    }).count();\n    console.log(countDoc);\n\n    if (countDoc === 1) {\n      board = Boards.findOne({\n        \"boardId\": idBoard\n      });\n      return board;\n    } else {\n      throw new Meteor.Error(404, 'Board not found');\n    }\n  },\n\n  'boards.removeBoard'(boardId) {\n    return Boards.remove(boardId);\n  },\n\n  'boards.editBoard'(newBoard) {\n    return Boards.update({\n      boardId: newBoard.boardId\n    }, {\n      $set: {\n        boardTitle: newBoard.boardTitle,\n        boardPrivacy: newBoard.privacy\n      }\n    });\n  },\n\n  'getAllBoards'(_ref2) {\n    let {\n      idUser\n    } = _ref2;\n  }\n\n});","map":{"version":3,"sources":["api/BoardsRoutes.js"],"names":["Boards","module","link","v","Meteor","Random","publish","find","methods","boardName","insert","boardId","id","boardTitle","boardPrivacy","boardUser","user","idBoard","board","countDoc","count","console","log","findOne","Error","remove","newBoard","update","$set","privacy","idUser"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,MAAM,CAACC,IAAP,CAAY,kBAAZ,EAA+B;AAACF,EAAAA,MAAM,CAACG,CAAD,EAAG;AAACH,IAAAA,MAAM,GAACG,CAAP;AAAS;;AAApB,CAA/B,EAAqD,CAArD;AAAwD,IAAIC,MAAJ;AAAWH,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACE,EAAAA,MAAM,CAACD,CAAD,EAAG;AAACC,IAAAA,MAAM,GAACD,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIE,MAAJ;AAAWJ,MAAM,CAACC,IAAP,CAAY,UAAZ,EAAuB;AAAC,MAAIC,CAAJ,EAAM;AAACE,IAAAA,MAAM,GAACF,CAAP;AAAS;;AAAjB,CAAvB,EAA0C,CAA1C;AAI9IC,MAAM,CAACE,OAAP,CAAe,QAAf,EAAyB,YAAY;AAAC,SAAON,MAAM,CAACO,IAAP,EAAP;AAAqB,CAA3D;AAEAH,MAAM,CAACI,OAAP,CAAe;AACX,sBAAoBC,SAApB,EAA+B;AAC3B,WAAOT,MAAM,CAACU,MAAP,CAAc;AAACC,MAAAA,OAAO,EAAEC,EAAV;AAAcC,MAAAA,UAAU,EAAEJ,SAA1B;AAAoCK,MAAAA,YAAY,EAAE,CAAlD;AAAqDC,MAAAA,SAAS,EAAE,CAACX,MAAM,CAACY,IAAP,EAAD;AAAhE,KAAd,CAAP;AACH,GAHU;;AAKX,yBAA6B;AAAA,QAAX;AAACC,MAAAA;AAAD,KAAW;AACzB,QAAIC,KAAJ;AACA,QAAIC,QAAQ,GAAGnB,MAAM,CAACO,IAAP,CAAY;AAAC,iBAAWU;AAAZ,KAAZ,EAAkCG,KAAlC,EAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,QAAIA,QAAQ,KAAK,CAAjB,EAAoB;AAChBD,MAAAA,KAAK,GAAGlB,MAAM,CAACuB,OAAP,CAAe;AAAC,mBAAWN;AAAZ,OAAf,CAAR;AACA,aAAOC,KAAP;AACH,KAHD,MAGO;AACH,YAAM,IAAId,MAAM,CAACoB,KAAX,CAAiB,GAAjB,EAAsB,iBAAtB,CAAN;AACH;AAEJ,GAhBU;;AAkBX,uBAAqBb,OAArB,EAA8B;AAC1B,WAAOX,MAAM,CAACyB,MAAP,CAAcd,OAAd,CAAP;AACH,GApBU;;AAsBX,qBAAoBe,QAApB,EAA8B;AAC1B,WAAO1B,MAAM,CAAC2B,MAAP,CAAc;AAAChB,MAAAA,OAAO,EAAEe,QAAQ,CAACf;AAAnB,KAAd,EAA2C;AAAEiB,MAAAA,IAAI,EAAE;AAClDf,QAAAA,UAAU,EAAEa,QAAQ,CAACb,UAD6B;AAElDC,QAAAA,YAAY,EAAEY,QAAQ,CAACG;AAF2B;AAAR,KAA3C,CAAP;AAKH,GA5BU;;AA8BX,wBAAyB;AAAA,QAAT;AAACC,MAAAA;AAAD,KAAS;AAExB;;AAhCU,CAAf","sourcesContent":["import {Boards} from \"../models/Boards\";\r\nimport {Meteor} from \"meteor/meteor\";\r\nimport * as Random from \"asteroid\";\r\n\r\nMeteor.publish('boards', function () {return Boards.find()});\r\n\r\nMeteor.methods({\r\n    'board.createBoard'(boardName) {\r\n        return Boards.insert({boardId: id, boardTitle: boardName,boardPrivacy: 1, boardUser: [Meteor.user()]})\r\n    },\r\n\r\n    'board.getBoard' ({idBoard}) {\r\n        let board;\r\n        let countDoc = Boards.find({\"boardId\": idBoard}).count();\r\n        console.log(countDoc)\r\n        if (countDoc === 1) {\r\n            board = Boards.findOne({\"boardId\": idBoard});\r\n            return board;\r\n        } else {\r\n            throw new Meteor.Error(404, 'Board not found')\r\n        }\r\n\r\n    },\r\n\r\n    'boards.removeBoard'(boardId) {\r\n        return Boards.remove(boardId);\r\n    },\r\n\r\n    'boards.editBoard' (newBoard) {\r\n        return Boards.update({boardId: newBoard.boardId}, { $set: {\r\n                boardTitle: newBoard.boardTitle,\r\n                boardPrivacy: newBoard.privacy\r\n        }})\r\n\r\n    },\r\n\r\n    'getAllBoards' ({idUser}){\r\n\r\n    }\r\n})"]},"sourceType":"script","hash":"4ec0f3488a0f32b919cdbeeed618f7fe7e5d59e8"}
