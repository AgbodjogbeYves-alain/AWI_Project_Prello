{"version":3,"sources":["meteor://ðŸ’»app/api/Utils/boardUtils.js","meteor://ðŸ’»app/api/boards.js","meteor://ðŸ’»app/api/lists.js","meteor://ðŸ’»app/api/teams.js","meteor://ðŸ’»app/api/users.js","meteor://ðŸ’»app/models/BoardUser.js","meteor://ðŸ’»app/models/Boards.js","meteor://ðŸ’»app/models/Card.js","meteor://ðŸ’»app/models/List.js","meteor://ðŸ’»app/models/Team.js","meteor://ðŸ’»app/models/Users.js","meteor://ðŸ’»app/main.js"],"names":["module","export","boardUtils","checkInBoardUser","idUser","board","isIn","boardUsers","map","user","_id","Boards","link","v","Meteor","rusFunction","default","publish","find","methods","console","log","userId","insert","Error","idBoard","countDoc","count","findOne","boardId","remove","newBoard","boardList","listCard","update","$set","boardTitle","boardPrivacy","privacy","fetch","allBoards","userBoard","push","boardTeams","cards","list","theList","call","card","boardTags","lists","listId","cardId","Lists","Random","JsonRoutes","listName","listTitle","idList","List","Middleware","use","req","res","next","query","error","sendResult","code","data","result","add","users","username","body","state","firstname","lastname","password","email","Team","teamName","description","teamDescription","teamOwner","teams","Accounts","$ne","fields","profile","length","options","enabledMails","createUser","emails","address","verified","actualPassword","newPassword","checkPassword","_checkPassword","reason","setPassword","logout","BoardUserSchema","SimpleSchema","UserSchema","type","label","required","userRole","Number","BoardSchema","Mongo","ListSchema","Collection","String","boardDescription","Array","Integer","boardLists","defaultValue","Object","boardCreatedAt","Date","autoValue","attachSchema","Cards","CardSchema","regEx","RegEx","Id","cardTitle","cardDescription","cardTag","cardComment","cardAttachment","cardChecklist","listCreatedAt","TeamSchema","optional","teamMembers","UserProfileSchema","ennabledMails","Boolean","Email","registered_emails","blackbox","createdAt","services","roles","heartbeat","startup"],"mappings":"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","file":"/app.js","sourcesContent":["export class boardUtils {\r\n\r\n    static checkInBoardUser(idUser, board){\r\n        let isIn = false\r\n        board.boardUsers.map((user) => {\r\n            if(user._id == idUser){\r\n                isIn = true\r\n            }\r\n        })\r\n\r\n        return isIn\r\n    }\r\n}","import {Boards} from \"../models/Boards\";\r\nimport {Meteor} from \"meteor/meteor\";\r\nimport {boardUtils} from \"./Utils/boardUtils\";\r\nimport rusFunction from 'rus-diff'\r\n\r\nMeteor.publish('boards', function () {return Boards.find()});\r\n\r\nMeteor.methods({\r\n\r\n    'boards.createBoard'(board) {\r\n        console.log(\"test\")\r\n        if(Meteor.userId()){\r\n            console.log(board)\r\n            return Boards.insert(board);\r\n        }else{\r\n            throw Meteor.Error(401, \"You are not authentificated\")\r\n        }\r\n    },\r\n\r\n    'boards.getBoard' (idBoard) {\r\n        let board;\r\n        let countDoc = Boards.find({\"boardId\": idBoard}).count();\r\n        console.log(countDoc)\r\n        if (countDoc === 1) {\r\n            board = Boards.findOne({\"boardId\": idBoard});\r\n            //if(board.boardPrivacy == 1){\r\n              //  if(Meteor.userId()){\r\n                //    if(boardUtils.checkInBoardUser(Meteor.userId(), board)){\r\n                  //      return board\r\n                    //}else{\r\n                      //  return Meteor.Error(403, \"You are not on this allow to see this board\")\r\n                    //}\r\n\r\n                //}else{\r\n                //    return Meteor.Error(401, \"You are not authentificated\")\r\n                //}\r\n            //}else{\r\n                return board\r\n            //}\r\n        } else {\r\n            throw new Meteor.Error(404, 'Board not found');\r\n        }\r\n\r\n    },\r\n\r\n    /*'boards.getBoardFromExt' (idBoard,token) {\r\n        let decodedToken = \"xd\"\r\n        let board;\r\n        let countDoc = Boards.find({\"_id\": idBoard}).count();\r\n        console.log(countDoc)\r\n        if (countDoc === 1) {\r\n            board = Boards.findOne({\"boardId\": idBoard});\r\n            if(board.boardPrivacy == 1){\r\n                if(token.userId){\r\n                    if(boardUtils.checkInBoardUser(Meteor.userId(), board)){\r\n                        return board\r\n                    }else{\r\n                        return Meteor.Error(403, \"You are not on this allow to see this board\")\r\n                    }\r\n\r\n                }else{\r\n                    return Meteor.Error(401, \"You are not authentificated\")\r\n                }\r\n            }\r\n            return board;\r\n        } else {\r\n            throw new Meteor.Error(404, 'Board not found')\r\n        }\r\n    },*/\r\n\r\n    'boards.removeBoard'(boardId) {\r\n        let board;\r\n        let countDoc = Boards.find({\"_id\": boardId}).count();\r\n        //console.log(countDoc)\r\n        if (countDoc === 1) {\r\n            board = Boards.findOne({\"boardId\": boardId});\r\n            //if(Meteor.userId()){\r\n              //  if(boardUtils.checkInBoardUser(Meteor.userId(), board)){\r\n                    return Boards.remove(boardId);\r\n                //}else{\r\n                  //  return Meteor.Error(403, \"You are not allow to delete this board\")\r\n                //}\r\n\r\n            //}else{\r\n              //  return Meteor.Error(401, \"You are not authentificated\")\r\n            //}\r\n        } else {\r\n            throw new Meteor.Error(404, 'Board not found')\r\n        }\r\n    },\r\n\r\n    'boards.editBoard' (newBoard) {\r\n        let countDoc = Boards.find({\"boardId\": newBoard.boardId}).count();\r\n        if (countDoc === 1) {\r\n            console.log(\"In\")\r\n            console.log(newBoard.boardList[0].listCard[0])\r\n            Boards.update({boardId: newBoard.boardId}, {\r\n                $set: {\r\n                    boardTitle: newBoard.boardTitle,\r\n                    boardPrivacy: newBoard.privacy,\r\n                    boardUsers: newBoard.boardUsers\r\n                }\r\n\r\n            })\r\n\r\n           /*newBoard.boardList.forEach((list) => {\r\n                    Boards.update({boardId: newBoard.boardId, 'boardList.listId': list.listId}, {\r\n                        $set: {\r\n                            \"boardList.list.listCard.$[]\": list.listCard,\r\n                        }\r\n\r\n                    })\r\n                })*/\r\n\r\n\r\n\r\n            /*newBoard.boardList.forEach((list) => {\r\n                Boards.update({boardId: newBoard.boardId, \"boardList.listId\": list.listId}, {\r\n                    $set: {\r\n                        boardTitle: newBoard.boardTitle,\r\n                        boardPrivacy: newBoard.privacy,\r\n                    }\r\n                })\r\n            })*/\r\n        }else {\r\n            throw new Meteor.Error(404, 'Board not found')\r\n        }\r\n    },\r\n\r\n    'board.getAllBoards' (){\r\n        return Boards.find().fetch();\r\n    },\r\n\r\n    'board.getUserAllBoards' (userId){\r\n        let allBoards = Boards.find().fetch()\r\n        let userBoard = []\r\n        allBoards.map((board) => {\r\n            if(boardUtils.checkInBoardUser(userId)){\r\n                userBoard.push(board)\r\n            }\r\n        })\r\n\r\n        return allBoards\r\n\r\n    },\r\n\r\n    'board.getTeam' (boardId){\r\n        let board;\r\n        let countDoc = Boards.find({\"_id\": boardId}).count();\r\n        if (countDoc === 1) {\r\n            board = Boards.findOne({\"boardId\": boardId});\r\n            //if(Meteor.userId()){\r\n            //  if(boardUtils.checkInBoardUser(Meteor.userId(), board)){\r\n            return board.boardTeams;\r\n            //}else{\r\n            //  return Meteor.Error(403, \"You are not allow to delete this board\")\r\n            //}\r\n\r\n            //}else{\r\n            //  return Meteor.Error(401, \"You are not authentificated\")\r\n            //}\r\n        } else {\r\n            throw new Meteor.Error(404, 'Board not found')\r\n        }\r\n    },\r\n    'board.getCards' (boardId) {\r\n        let board;\r\n        let countDoc = Boards.find({\"_id\": boardId}).count();\r\n        if (countDoc === 1) {\r\n            board = Boards.findOne({\"boardId\": boardId});\r\n            //if(Meteor.userId()){\r\n            //  if(boardUtils.checkInBoardUser(Meteor.userId(), board)){\r\n            let cards = []\r\n            board.boardList.map((list) => {\r\n                // noinspection JSAnnotator\r\n                let theList = Meteor.call('getList',list._id)\r\n                theList.listCard.map((card) => {\r\n                    cards.push(card)\r\n                })\r\n            })\r\n\r\n            return cards\r\n            //}else{\r\n            //  return Meteor.Error(403, \"You are not allow to delete this board\")\r\n            //}\r\n\r\n            //}else{\r\n            //  return Meteor.Error(401, \"You are not authentificated\")\r\n            //}\r\n        } else {\r\n            throw new Meteor.Error(404, 'Board not found')\r\n        }\r\n    },\r\n\r\n    'boards.getTags' (boardId) {\r\n        let board\r\n        let countDoc = Boards.find({\"_id\": boardId}).count();\r\n        if (countDoc === 1) {\r\n            board = Boards.findOne({\"boardId\": boardId});\r\n            //if(Meteor.userId()){\r\n            //  if(boardUtils.checkInBoardUser(Meteor.userId(), board)){\r\n            return board.boardTags\r\n            //}else{\r\n            //  return Meteor.Error(403, \"You are not allow to delete this board\")\r\n            //}\r\n\r\n            //}else{\r\n            //  return Meteor.Error(401, \"You are not authentificated\")\r\n            //}\r\n        } else {\r\n            throw new Meteor.Error(404, 'Board not found')\r\n        }\r\n    },\r\n\r\n    'boards.getLists' (boardId) {\r\n        let board\r\n        let lists = []\r\n        let countDoc = Boards.find({\"_id\": boardId}).count();\r\n        if (countDoc === 1) {\r\n            board = Boards.findOne({\"boardId\": boardId});\r\n            //if(Meteor.userId()){\r\n            //  if(boardUtils.checkInBoardUser(Meteor.userId(), board)){\r\n            board.boardList.map((list) => {\r\n                let theList = Meteor.call('list.getList',list._id)\r\n                lists.push(theList)\r\n            })\r\n            return lists\r\n            //}else{\r\n            //  return Meteor.Error(403, \"You are not allow to delete this board\")\r\n            //}\r\n\r\n            //}else{\r\n            //  return Meteor.Error(401, \"You are not authentificated\")\r\n            //}\r\n        } else {\r\n            throw new Meteor.Error(404, 'Board not found')\r\n        }\r\n    },\r\n    'board.archiveList' (boardId,listId) {\r\n\r\n    },\r\n\r\n    'board.archiveCard' (boardId, cardId) {\r\n\r\n    }\r\n\r\n})\r\n","import {Lists} from \"../models/List\";\r\nimport {Meteor} from \"meteor/meteor\";\r\nimport { Random } from 'meteor/random';\r\nimport { JsonRoutes } from 'meteor/simple:json-routes';\r\n\r\n\r\nMeteor.methods({\r\n    'list.createList'(listName) {\r\n        return Lists.insert({listTitle: listName})\r\n    },\r\n\r\n    'list.getList' (idList) {\r\n        let countDoc = Lists.find({\"_id\": idList}).count();\r\n        if (countDoc === 1) {\r\n            let list = List.findOne({\"_id\": idList});\r\n            return list;\r\n        } else {\r\n            throw new Meteor.Error(404, 'List not found')\r\n        }\r\n\r\n    },\r\n    'list.deleteList'(idBoard, idList) {\r\n\r\n    },\r\n\r\n    'list.editList' (list) {\r\n\r\n    },\r\n\r\n    'list.getAllList' (){\r\n\r\n    }\r\n})\r\n\r\n// code to run on server at startup\r\nJsonRoutes.Middleware.use(function(req, res, next) {\r\n    if(req.query.error) {\r\n        JsonRoutes.sendResult(res, {\r\n            code: 401,\r\n            data: {\r\n                result: \"ERROR\"\r\n            }\r\n        })\r\n    }\r\n\r\n    next();\r\n});\r\n\r\n\r\nJsonRoutes.add('post', '/signUp/', function(req, res, next) {\r\n    console.log(req)\r\n    Meteor.users.insert({\r\n        username: req.body.state.username,\r\n        firstname: req.body.state.firstname,\r\n        lastname: req.body.state.lastname,\r\n        password: req.body.state.password,\r\n        email: req.body.state.email\r\n    })\r\n    JsonRoutes.sendResult(res, {\r\n        data: {\r\n            result: Meteor.users.find().fetch()\r\n        }\r\n    });\r\n});\r\n\r\n","import {Meteor} from \"meteor/meteor\";\r\nimport {Team}  from \"../models/Team\";\r\n\r\nMeteor.methods({\r\n    \"teams.createTeam\"({teamName,description}){\r\n        if(!this.userId){\r\n            throw new Meteor.Error('Not-Authorized');\r\n        }\r\n        let teamDescription = description ? description : \"\"\r\n        //let owner = Meteor.users.findOne(this.userId)\r\n        /*console.log(\"*********\")\r\n        console.log(teamName)\r\n        console.log(\"*********\")*/\r\n        return Team.insert({\r\n            teamName: teamName,\r\n            teamDescription: teamDescription,\r\n            teamOwner : this.userId\r\n        });\r\n\r\n    },\r\n\r\n    'getTeams'(){\r\n        //check(teamId,String)\r\n       if(!this.userId){\r\n            throw new Meteor.Error('not-authorised');\r\n        }\r\n\r\n        let teams = Team.find();\r\n\r\n        if(teams)\r\n            return teams\r\n        else\r\n          throw new Meteor.Error(404, 'Team not found')\r\n    }\r\n\r\n});","import { Meteor } from 'meteor/meteor';\r\nimport { Accounts } from 'meteor/accounts-base';\r\n\r\nMeteor.publish('users', function(){\r\n    if(this.userId) return Meteor.users.find({_id: {$ne: this.userId}}, {fields: { profile: 1 }});\r\n});\r\n\r\nMeteor.publish('user', function () {\r\n    return Meteor.users.find({_id: this.userId});\r\n});\r\n\r\nMeteor.methods({\r\n    \"users.signUp\"({lastname, firstname, email, password}){\r\n        if(password.length < 6) throw new Meteor.Error(\"Too short password, at least 6 characters.\")\r\n        else if(!email || !lastname || !firstname) throw new Meteor.Error(\"Some field are empty.\")\r\n        else {\r\n            let options = {\r\n                email: email,\r\n                password: password,\r\n                profile: {\r\n                    lastname: lastname,\r\n                    firstname: firstname,\r\n                    enabledMails: false,\r\n                    email: email \r\n                }\r\n            };\r\n\r\n            Accounts.createUser(options);\r\n        }\r\n    },\r\n    \"users.updateProfile\"(email, lastname, firstname){\r\n        Meteor.users.update(Meteor.userId(), { $set: {\r\n            emails: [{address: email, verified: true}],\r\n            'profile.lastname': lastname,\r\n            'profile.firstname': firstname,\r\n            'profile.email': email\r\n        }});\r\n        return Meteor.user();\r\n    },\r\n    'users.changePassword'(actualPassword, newPassword){\r\n        let checkPassword = Accounts._checkPassword(Meteor.user(), actualPassword);\r\n        if(checkPassword.error) throw new Meteor.Error(checkPassword.error.reason)\r\n        else{\r\n            Accounts.setPassword(Meteor.userId(), newPassword, {logout: false});\r\n        }\r\n    },\r\n    'users.setEnabledMails'(enabledMails){\r\n        Meteor.users.update(Meteor.userId(), { $set: {\r\n            'profile.enabledMails': enabledMails\r\n        }});\r\n        return Meteor.user();\r\n    },\r\n    'users.remove'(){\r\n        Meteor.users.remove(Meteor.userId());\r\n    },\r\n    \"users.getUser\"(email){\r\n        return Meteor.users.findOne({\"profile.email\": email});\r\n    },\r\n    \"users.getUsers\"(){\r\n        return Meteor.users.find();\r\n    }\r\n})","import SimpleSchema from 'simpl-schema';\r\nimport { UserSchema } from './Users';\r\n\r\nexport const BoardUserSchema = new SimpleSchema({\r\n  user: {\r\n      type: UserSchema,\r\n      label: \"User\",\r\n      required: true\r\n  },\r\n  userRole: {\r\n      type: Number,\r\n      label: \"Role\",\r\n      required: true\r\n  }\r\n});","import { Mongo } from 'meteor/mongo'\r\n\r\nexport const Boards = new Mongo.Collection('boards')\r\n\r\nimport SimpleSchema from 'simpl-schema';\r\nimport {ListSchema} from \"./List\";\r\nimport { BoardUserSchema } from './BoardUser';\r\n\r\nexport const BoardSchema = new SimpleSchema({\r\n  boardTitle: {\r\n      type: String,\r\n      label: \"Title\",\r\n      required: true\r\n  },\r\n  boardDescription: {\r\n      type: String,\r\n      label: \"Description\",\r\n      required: false\r\n  },\r\n  boardUsers: {\r\n      type: Array,\r\n      label: \"Users\",\r\n      required: true\r\n  },\r\n  'boardUsers.$': BoardUserSchema, //se if need to replace Object with a schema\r\n  boardPrivacy: {\r\n      type: SimpleSchema.Integer,\r\n      label: \"Privacy\",\r\n      required: true\r\n  },\r\n  boardLists: {\r\n      type: Array,\r\n      label: \"Lists\",\r\n      defaultValue: []\r\n  },\r\n  'boardLists.$': ListSchema, //se if need to replace Object with a schema\r\n\r\n    boardTags: {\r\n      type: Array,\r\n      label: \"Tags\",\r\n      defaultValue: []\r\n  },\r\n  'boardTags.$': Object, //se if need to replace Object with a schema\r\n  boardTeams: {\r\n      type: Array,\r\n      label: \"Teams\",\r\n      defaultValue: []\r\n  },\r\n  'boardTeams.$': Object, //se if need to replace Object with a schema\r\n  boardCreatedAt:{\r\n      type: Date,\r\n      autoValue: function(){return new Date();}\r\n  }\r\n});\r\n\r\nBoards.attachSchema(BoardSchema);","import SimpleSchema from 'simpl-schema';\r\n\r\nimport { Mongo } from 'meteor/mongo'\r\n\r\nexport const Cards = new Mongo.Collection('cards')\r\n\r\nexport const CardSchema = new SimpleSchema({\r\n  cardId: {\r\n      type: String,\r\n      label: \"Id\",\r\n      regEx: SimpleSchema.RegEx.Id\r\n  },\r\n  cardTitle: {\r\n      type: String,\r\n      label: \"Title\",\r\n      required: true\r\n  },\r\n  cardDescription: {\r\n      type: String,\r\n      label: \"Description\",\r\n      defaultValue: []\r\n  },\r\n  cardTag: {\r\n      type: Array,\r\n      label: \"Tags\",\r\n      defaultValue: []\r\n  },\r\n  'cardTag.$': Object, //se if need to replace Object with a schema\r\n  cardComment: {\r\n      type: Array,\r\n      label: \"Comments\",\r\n      defaultValue: []\r\n  },\r\n  'cardComment.$': Object, //se if need to replace Object with a schema\r\n  cardAttachment: {\r\n      type: Array,\r\n      label: \"Attachments\",\r\n      defaultValue: []\r\n  },\r\n  'cardAttachment.$': Object, //se if need to replace Object with a schema\r\n  cardChecklist: {\r\n      type: Array,\r\n      label: \"CheckLists\",\r\n      defaultValue: []\r\n  },\r\n  'cardChecklist.$': Object, //se if need to replace Object with a schema\r\n  listCreatedAt:{\r\n    type: Date,\r\n    autoValue: function(){return new Date();}\r\n}\r\n});\r\n\r\nCards.attachSchema(CardSchema);","import SimpleSchema from 'simpl-schema';\r\n\r\nimport { Mongo } from 'meteor/mongo'\r\nimport {CardSchema} from \"./Card\";\r\n\r\nexport const Lists = new Mongo.Collection('lists')\r\n\r\nexport const ListSchema = new SimpleSchema({\r\n  listId: {\r\n    type: String,\r\n    label: \"Id\",\r\n    regEx: SimpleSchema.RegEx.Id\r\n  },\r\n  listTitle: {\r\n    type: String,\r\n    label: \"Title\",\r\n    required: true\r\n  },\r\n  listCard:{\r\n    type: Array,\r\n    label: \"Cards\",\r\n    defaultValue: []\r\n  },\r\n  'listCard.$': CardSchema, //se if need to replace Object with a schema\r\n  listCreatedAt:{\r\n    type: Date,\r\n    autoValue: function(){return new Date();}\r\n}\r\n});\r\n\r\nLists.attachSchema(ListSchema);","import { Mongo } from 'meteor/mongo'\r\nimport SimpleSchema from 'simpl-schema';\r\nimport {UserSchema} from './Users.js'\r\n\r\nexport const Team = new Mongo.Collection('teams');\r\n\r\nconst TeamSchema = new SimpleSchema({\r\n    teamName: {\r\n        type: String,\r\n        label: \"Name\",\r\n    },\r\n    teamDescription: {\r\n        type: String,\r\n        label: \"Description\",\r\n        optional:true,\r\n        defaultValue: \"\"\r\n    },\r\n    teamOwner : {\r\n        type: String,\r\n        label: \"Owner\"\r\n    },\r\n    teamMembers:{\r\n        type: Array,\r\n        label : \"Members\",\r\n        defaultValue: []\r\n    },\r\n    'teamMembers.$': UserSchema\r\n});\r\n\r\n\r\nTeam.attachSchema(TeamSchema);","import SimpleSchema from 'simpl-schema';\r\n\r\nconst UserProfileSchema = new SimpleSchema({\r\n    firstname: {\r\n        type: String,\r\n        optional: true\r\n    },\r\n    lastname: {\r\n        type: String,\r\n        optional: true\r\n    },\r\n    email : {\r\n        type: String,\r\n        optional: true\r\n    },\r\n    ennabledMails: {\r\n        type: Boolean,\r\n        optional: true\r\n    }\r\n});\r\n\r\nexport const UserSchema = new SimpleSchema({\r\n    username: {\r\n        type: String,\r\n        // For accounts-password, either emails or username is required, but not both. It is OK to make this\r\n        // optional here because the accounts-password package does its own validation.\r\n        // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\r\n        optional: true\r\n    },\r\n    emails: {\r\n        type: Array,\r\n        // For accounts-password, either emails or username is required, but not both. It is OK to make this\r\n        // optional here because the accounts-password package does its own validation.\r\n        // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\r\n        optional: true\r\n    },\r\n    \"emails.$\": {\r\n        type: Object\r\n    },\r\n    \"emails.$.address\": {\r\n        type: String,\r\n        regEx: SimpleSchema.RegEx.Email\r\n    },\r\n    \"emails.$.verified\": {\r\n        type: Boolean\r\n    },\r\n    // Use this registered_emails field if you are using splendido:meteor-accounts-emails-field / splendido:meteor-accounts-meld\r\n    registered_emails: {\r\n        type: Array,\r\n        optional: true\r\n    },\r\n    'registered_emails.$': {\r\n        type: Object,\r\n        blackbox: true\r\n    },\r\n    createdAt: {\r\n        type: Date\r\n    },\r\n    profile: {\r\n        type: UserProfileSchema,\r\n        optional: true\r\n    },\r\n    // Make sure this services field is in your schema if you're using any of the accounts packages\r\n    services: {\r\n        type: Object,\r\n        optional: true,\r\n        blackbox: true\r\n    },\r\n    // Add `roles` to your schema if you use the meteor-roles package.\r\n    // Option 1: Object type\r\n    // If you specify that type as Object, you must also specify the\r\n    // `Roles.GLOBAL_GROUP` group whenever you add a user to a role.\r\n    // Example:\r\n    // Roles.addUsersToRoles(userId, [\"admin\"], Roles.GLOBAL_GROUP);\r\n    // You can't mix and match adding with and without a group since\r\n    // you will fail validation in some cases.\r\n    roles: {\r\n        type: Object,\r\n        optional: true,\r\n        blackbox: true\r\n    },\r\n    // Option 2: [String] type\r\n    // If you are sure you will never need to use role groups, then\r\n    // you can specify [String] as the type\r\n    roles: {\r\n        type: Array,\r\n        optional: true\r\n    },\r\n    'roles.$': {\r\n        type: String\r\n    },\r\n    // In order to avoid an 'Exception in setInterval callback' from Meteor\r\n    heartbeat: {\r\n        type: Date,\r\n        optional: true\r\n    }\r\n});\r\n\r\nMeteor.users.attachSchema(UserSchema);","import { Meteor } from 'meteor/meteor';\r\n\r\nimport './api/users.js';\r\nimport './api/boards';\r\nimport './api/lists';\r\nimport './api/teams' \r\n\r\nMeteor.startup(() => {\r\n\r\n});"]}