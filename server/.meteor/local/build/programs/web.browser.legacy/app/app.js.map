{"version":3,"sources":["meteor://ðŸ’»app/api/Utils/boardUtils.js","meteor://ðŸ’»app/api/boards.js","meteor://ðŸ’»app/api/lists.js","meteor://ðŸ’»app/api/teams.js","meteor://ðŸ’»app/api/users.js","meteor://ðŸ’»app/models/BoardUser.js","meteor://ðŸ’»app/models/Boards.js","meteor://ðŸ’»app/models/Card.js","meteor://ðŸ’»app/models/List.js","meteor://ðŸ’»app/models/Team.js","meteor://ðŸ’»app/models/Users.js","meteor://ðŸ’»app/main.js"],"names":["module","export","boardUtils","checkInBoardUser","idUser","board","isIn","boardUsers","map","user","_id","Boards","link","v","Meteor","rusFunction","publish","find","methods","console","log","userId","insert","Error","idBoard","countDoc","count","findOne","boardId","remove","newBoard","boardList","listCard","update","$set","boardTitle","boardPrivacy","privacy","fetch","allBoards","userBoard","push","boardTeams","cards","list","theList","call","card","boardTags","lists","listId","cardId","Lists","Random","JsonRoutes","listName","listTitle","idList","List","Middleware","use","req","res","next","query","error","sendResult","code","data","result","add","users","username","body","state","firstname","lastname","password","email","Team","team","teamMember","Array","teamUsers","teamName","teamTitle","teamDescription","teamOwner","teamMembers","teams","Accounts","$ne","fields","profile","length","options","enabledMails","createUser","emails","address","verified","actualPassword","newPassword","checkPassword","_checkPassword","reason","setPassword","logout","BoardUserSchema","SimpleSchema","UserSchema","type","label","required","userRole","Number","BoardSchema","Mongo","ListSchema","Collection","String","boardDescription","Integer","boardLists","defaultValue","Object","boardCreatedAt","Date","autoValue","attachSchema","Cards","CardSchema","regEx","RegEx","Id","cardTitle","cardDescription","cardTag","cardComment","cardAttachment","cardChecklist","listCreatedAt","TeamSchema","UserProfileSchema","optional","ennabledMails","Boolean","Email","registered_emails","blackbox","createdAt","services","roles","heartbeat","startup"],"mappings":"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","file":"/app.js","sourcesContent":["export class boardUtils {\r\n\r\n    static checkInBoardUser(idUser, board){\r\n        let isIn = false\r\n        board.boardUsers.map((user) => {\r\n            if(user._id == idUser){\r\n                isIn = true\r\n            }\r\n        })\r\n\r\n        return isIn\r\n    }\r\n}","import {Boards} from \"../models/Boards\";\r\nimport {Meteor} from \"meteor/meteor\";\r\nimport {boardUtils} from \"./Utils/boardUtils\";\r\nimport rusFunction from 'rus-diff'\r\n\r\nMeteor.publish('boards', function () {return Boards.find()});\r\n\r\nMeteor.methods({\r\n\r\n    'boards.createBoard'(board) {\r\n        console.log(\"test\")\r\n        if(Meteor.userId()){\r\n            console.log(board)\r\n            return Boards.insert(board);\r\n        }else{\r\n            throw Meteor.Error(401, \"You are not authentificated\")\r\n        }\r\n    },\r\n\r\n    'boards.getBoard' (idBoard) {\r\n        let board;\r\n        let countDoc = Boards.find({\"boardId\": idBoard}).count();\r\n        console.log(countDoc)\r\n        if (countDoc === 1) {\r\n            board = Boards.findOne({\"boardId\": idBoard});\r\n            //if(board.boardPrivacy == 1){\r\n              //  if(Meteor.userId()){\r\n                //    if(boardUtils.checkInBoardUser(Meteor.userId(), board)){\r\n                  //      return board\r\n                    //}else{\r\n                      //  return Meteor.Error(403, \"You are not on this allow to see this board\")\r\n                    //}\r\n\r\n                //}else{\r\n                //    return Meteor.Error(401, \"You are not authentificated\")\r\n                //}\r\n            //}else{\r\n                return board\r\n            //}\r\n        } else {\r\n            throw new Meteor.Error(404, 'Board not found');\r\n        }\r\n\r\n    },\r\n\r\n    /*'boards.getBoardFromExt' (idBoard,token) {\r\n        let decodedToken = \"xd\"\r\n        let board;\r\n        let countDoc = Boards.find({\"_id\": idBoard}).count();\r\n        console.log(countDoc)\r\n        if (countDoc === 1) {\r\n            board = Boards.findOne({\"boardId\": idBoard});\r\n            if(board.boardPrivacy == 1){\r\n                if(token.userId){\r\n                    if(boardUtils.checkInBoardUser(Meteor.userId(), board)){\r\n                        return board\r\n                    }else{\r\n                        return Meteor.Error(403, \"You are not on this allow to see this board\")\r\n                    }\r\n\r\n                }else{\r\n                    return Meteor.Error(401, \"You are not authentificated\")\r\n                }\r\n            }\r\n            return board;\r\n        } else {\r\n            throw new Meteor.Error(404, 'Board not found')\r\n        }\r\n    },*/\r\n\r\n    'boards.removeBoard'(boardId) {\r\n        let board;\r\n        let countDoc = Boards.find({\"_id\": boardId}).count();\r\n        //console.log(countDoc)\r\n        if (countDoc === 1) {\r\n            board = Boards.findOne({\"boardId\": boardId});\r\n            //if(Meteor.userId()){\r\n              //  if(boardUtils.checkInBoardUser(Meteor.userId(), board)){\r\n                    return Boards.remove(boardId);\r\n                //}else{\r\n                  //  return Meteor.Error(403, \"You are not allow to delete this board\")\r\n                //}\r\n\r\n            //}else{\r\n              //  return Meteor.Error(401, \"You are not authentificated\")\r\n            //}\r\n        } else {\r\n            throw new Meteor.Error(404, 'Board not found')\r\n        }\r\n    },\r\n\r\n    'boards.editBoard' (newBoard) {\r\n        let countDoc = Boards.find({\"boardId\": newBoard.boardId}).count();\r\n        if (countDoc === 1) {\r\n            console.log(\"In\")\r\n            console.log(newBoard.boardList[0].listCard[0])\r\n            Boards.update({boardId: newBoard.boardId}, {\r\n                $set: {\r\n                    boardTitle: newBoard.boardTitle,\r\n                    boardPrivacy: newBoard.privacy,\r\n                    boardUsers: newBoard.boardUsers\r\n                }\r\n\r\n            })\r\n\r\n           /*newBoard.boardList.forEach((list) => {\r\n                    Boards.update({boardId: newBoard.boardId, 'boardList.listId': list.listId}, {\r\n                        $set: {\r\n                            \"boardList.list.listCard.$[]\": list.listCard,\r\n                        }\r\n\r\n                    })\r\n                })*/\r\n\r\n\r\n\r\n            /*newBoard.boardList.forEach((list) => {\r\n                Boards.update({boardId: newBoard.boardId, \"boardList.listId\": list.listId}, {\r\n                    $set: {\r\n                        boardTitle: newBoard.boardTitle,\r\n                        boardPrivacy: newBoard.privacy,\r\n                    }\r\n                })\r\n            })*/\r\n        }else {\r\n            throw new Meteor.Error(404, 'Board not found')\r\n        }\r\n    },\r\n\r\n    'board.getAllBoards' (){\r\n        return Boards.find().fetch();\r\n    },\r\n\r\n    'board.getUserAllBoards' (userId){\r\n        let allBoards = Boards.find().fetch()\r\n        let userBoard = []\r\n        allBoards.map((board) => {\r\n            if(boardUtils.checkInBoardUser(userId)){\r\n                userBoard.push(board)\r\n            }\r\n        })\r\n\r\n        return allBoards\r\n\r\n    },\r\n\r\n    'board.getTeam' (boardId){\r\n        let board;\r\n        let countDoc = Boards.find({\"_id\": boardId}).count();\r\n        if (countDoc === 1) {\r\n            board = Boards.findOne({\"boardId\": boardId});\r\n            //if(Meteor.userId()){\r\n            //  if(boardUtils.checkInBoardUser(Meteor.userId(), board)){\r\n            return board.boardTeams;\r\n            //}else{\r\n            //  return Meteor.Error(403, \"You are not allow to delete this board\")\r\n            //}\r\n\r\n            //}else{\r\n            //  return Meteor.Error(401, \"You are not authentificated\")\r\n            //}\r\n        } else {\r\n            throw new Meteor.Error(404, 'Board not found')\r\n        }\r\n    },\r\n    'board.getCards' (boardId) {\r\n        let board;\r\n        let countDoc = Boards.find({\"_id\": boardId}).count();\r\n        if (countDoc === 1) {\r\n            board = Boards.findOne({\"boardId\": boardId});\r\n            //if(Meteor.userId()){\r\n            //  if(boardUtils.checkInBoardUser(Meteor.userId(), board)){\r\n            let cards = []\r\n            board.boardList.map((list) => {\r\n                // noinspection JSAnnotator\r\n                let theList = Meteor.call('getList',list._id)\r\n                theList.listCard.map((card) => {\r\n                    cards.push(card)\r\n                })\r\n            })\r\n\r\n            return cards\r\n            //}else{\r\n            //  return Meteor.Error(403, \"You are not allow to delete this board\")\r\n            //}\r\n\r\n            //}else{\r\n            //  return Meteor.Error(401, \"You are not authentificated\")\r\n            //}\r\n        } else {\r\n            throw new Meteor.Error(404, 'Board not found')\r\n        }\r\n    },\r\n\r\n    'boards.getTags' (boardId) {\r\n        let board\r\n        let countDoc = Boards.find({\"_id\": boardId}).count();\r\n        if (countDoc === 1) {\r\n            board = Boards.findOne({\"boardId\": boardId});\r\n            //if(Meteor.userId()){\r\n            //  if(boardUtils.checkInBoardUser(Meteor.userId(), board)){\r\n            return board.boardTags\r\n            //}else{\r\n            //  return Meteor.Error(403, \"You are not allow to delete this board\")\r\n            //}\r\n\r\n            //}else{\r\n            //  return Meteor.Error(401, \"You are not authentificated\")\r\n            //}\r\n        } else {\r\n            throw new Meteor.Error(404, 'Board not found')\r\n        }\r\n    },\r\n\r\n    'boards.getLists' (boardId) {\r\n        let board\r\n        let lists = []\r\n        let countDoc = Boards.find({\"_id\": boardId}).count();\r\n        if (countDoc === 1) {\r\n            board = Boards.findOne({\"boardId\": boardId});\r\n            //if(Meteor.userId()){\r\n            //  if(boardUtils.checkInBoardUser(Meteor.userId(), board)){\r\n            board.boardList.map((list) => {\r\n                let theList = Meteor.call('list.getList',list._id)\r\n                lists.push(theList)\r\n            })\r\n            return lists\r\n            //}else{\r\n            //  return Meteor.Error(403, \"You are not allow to delete this board\")\r\n            //}\r\n\r\n            //}else{\r\n            //  return Meteor.Error(401, \"You are not authentificated\")\r\n            //}\r\n        } else {\r\n            throw new Meteor.Error(404, 'Board not found')\r\n        }\r\n    },\r\n    'board.archiveList' (boardId,listId) {\r\n\r\n    },\r\n\r\n    'board.archiveCard' (boardId, cardId) {\r\n\r\n    }\r\n\r\n})\r\n","import {Lists} from \"../models/List\";\r\nimport {Meteor} from \"meteor/meteor\";\r\nimport { Random } from 'meteor/random';\r\nimport { JsonRoutes } from 'meteor/simple:json-routes';\r\n\r\n\r\nMeteor.methods({\r\n    'list.createList'(listName) {\r\n        return Lists.insert({listTitle: listName})\r\n    },\r\n\r\n    'list.getList' (idList) {\r\n        let countDoc = Lists.find({\"_id\": idList}).count();\r\n        if (countDoc === 1) {\r\n            let list = List.findOne({\"_id\": idList});\r\n            return list;\r\n        } else {\r\n            throw new Meteor.Error(404, 'List not found')\r\n        }\r\n\r\n    },\r\n    'list.deleteList'(idBoard, idList) {\r\n\r\n    },\r\n\r\n    'list.editList' (list) {\r\n\r\n    },\r\n\r\n    'list.getAllList' (){\r\n\r\n    }\r\n})\r\n\r\n// code to run on server at startup\r\nJsonRoutes.Middleware.use(function(req, res, next) {\r\n    if(req.query.error) {\r\n        JsonRoutes.sendResult(res, {\r\n            code: 401,\r\n            data: {\r\n                result: \"ERROR\"\r\n            }\r\n        })\r\n    }\r\n\r\n    next();\r\n});\r\n\r\n\r\nJsonRoutes.add('post', '/signUp/', function(req, res, next) {\r\n    console.log(req)\r\n    Meteor.users.insert({\r\n        username: req.body.state.username,\r\n        firstname: req.body.state.firstname,\r\n        lastname: req.body.state.lastname,\r\n        password: req.body.state.password,\r\n        email: req.body.state.email\r\n    })\r\n    JsonRoutes.sendResult(res, {\r\n        data: {\r\n            result: Meteor.users.find().fetch()\r\n        }\r\n    });\r\n});\r\n\r\n","import {Meteor} from \"meteor/meteor\";\r\nimport {Team}  from \"../models/Team\";\r\n\r\nMeteor.methods({\r\n    \"teams.createTeam\"(team){\r\n        if(!this.userId){\r\n            throw new Meteor.Error('Not-Authorized');\r\n        }\r\n        //let teamDescription = description.teamDescription ? description.teamDescription : \"\"\r\n        //let owner = Meteor.users.findOne(this.userId)\r\n       let teamMember = new Array();\r\n       teamMember.push(team.teamUsers[0].user)\r\n      \r\n        return Team.insert({\r\n            teamName: team.teamTitle,\r\n            teamDescription: team.teamDescription,\r\n            teamOwner : this.userId,\r\n            teamMembers : teamMember\r\n        });\r\n\r\n    },\r\n\r\n    'getTeams'(){\r\n        //check(teamId,String)\r\n       if(!this.userId){\r\n            throw new Meteor.Error('not-authorised');\r\n        }\r\n\r\n        let teams = Team.find();\r\n\r\n        if(teams)\r\n            return teams\r\n        else\r\n          throw new Meteor.Error(404, 'Team not found')\r\n    }\r\n\r\n});","import { Meteor } from 'meteor/meteor';\r\nimport { Accounts } from 'meteor/accounts-base';\r\n\r\nMeteor.publish('users', function(){\r\n    if(this.userId) return Meteor.users.find({_id: {$ne: this.userId}}, {fields: { profile: 1 }});\r\n});\r\n\r\nMeteor.publish('user', function () {\r\n    return Meteor.users.find({_id: this.userId});\r\n});\r\n\r\nMeteor.methods({\r\n    \"users.signUp\"({lastname, firstname, email, password}){\r\n        if(password.length < 6) throw new Meteor.Error(\"Too short password, at least 6 characters.\")\r\n        else if(!email || !lastname || !firstname) throw new Meteor.Error(\"Some field are empty.\")\r\n        else {\r\n            let options = {\r\n                email: email,\r\n                password: password,\r\n                profile: {\r\n                    lastname: lastname,\r\n                    firstname: firstname,\r\n                    enabledMails: false,\r\n                    email: email \r\n                }\r\n            };\r\n\r\n            Accounts.createUser(options);\r\n        }\r\n    },\r\n    \"users.updateProfile\"(email, lastname, firstname){\r\n        Meteor.users.update(Meteor.userId(), { $set: {\r\n            emails: [{address: email, verified: true}],\r\n            'profile.lastname': lastname,\r\n            'profile.firstname': firstname,\r\n            'profile.email': email\r\n        }});\r\n        return Meteor.user();\r\n    },\r\n    'users.changePassword'(actualPassword, newPassword){\r\n        let checkPassword = Accounts._checkPassword(Meteor.user(), actualPassword);\r\n        if(checkPassword.error) throw new Meteor.Error(checkPassword.error.reason)\r\n        else{\r\n            Accounts.setPassword(Meteor.userId(), newPassword, {logout: false});\r\n        }\r\n    },\r\n    'users.setEnabledMails'(enabledMails){\r\n        Meteor.users.update(Meteor.userId(), { $set: {\r\n            'profile.enabledMails': enabledMails\r\n        }});\r\n        return Meteor.user();\r\n    },\r\n    'users.remove'(){\r\n        Meteor.users.remove(Meteor.userId());\r\n    },\r\n    \"users.getUser\"(email){\r\n        return Meteor.users.findOne({\"profile.email\": email});\r\n    },\r\n    \"users.getUsers\"(){\r\n        return Meteor.users.find();\r\n    }\r\n})","import SimpleSchema from 'simpl-schema';\r\nimport { UserSchema } from './Users';\r\n\r\nexport const BoardUserSchema = new SimpleSchema({\r\n  user: {\r\n      type: UserSchema,\r\n      label: \"User\",\r\n      required: true\r\n  },\r\n  userRole: {\r\n      type: Number,\r\n      label: \"Role\",\r\n      required: true\r\n  }\r\n});","import { Mongo } from 'meteor/mongo'\r\n\r\nexport const Boards = new Mongo.Collection('boards')\r\n\r\nimport SimpleSchema from 'simpl-schema';\r\nimport {ListSchema} from \"./List\";\r\nimport { BoardUserSchema } from './BoardUser';\r\n\r\nexport const BoardSchema = new SimpleSchema({\r\n  boardTitle: {\r\n      type: String,\r\n      label: \"Title\",\r\n      required: true\r\n  },\r\n  boardDescription: {\r\n      type: String,\r\n      label: \"Description\",\r\n      required: false\r\n  },\r\n  boardUsers: {\r\n      type: Array,\r\n      label: \"Users\",\r\n      required: true\r\n  },\r\n  'boardUsers.$': BoardUserSchema, //se if need to replace Object with a schema\r\n  boardPrivacy: {\r\n      type: SimpleSchema.Integer,\r\n      label: \"Privacy\",\r\n      required: true\r\n  },\r\n  boardLists: {\r\n      type: Array,\r\n      label: \"Lists\",\r\n      defaultValue: []\r\n  },\r\n  'boardLists.$': ListSchema, //se if need to replace Object with a schema\r\n\r\n    boardTags: {\r\n      type: Array,\r\n      label: \"Tags\",\r\n      defaultValue: []\r\n  },\r\n  'boardTags.$': Object, //se if need to replace Object with a schema\r\n  boardTeams: {\r\n      type: Array,\r\n      label: \"Teams\",\r\n      defaultValue: []\r\n  },\r\n  'boardTeams.$': Object, //se if need to replace Object with a schema\r\n  boardCreatedAt:{\r\n      type: Date,\r\n      autoValue: function(){return new Date();}\r\n  }\r\n});\r\n\r\nBoards.attachSchema(BoardSchema);","import SimpleSchema from 'simpl-schema';\r\n\r\nimport { Mongo } from 'meteor/mongo'\r\n\r\nexport const Cards = new Mongo.Collection('cards')\r\n\r\nexport const CardSchema = new SimpleSchema({\r\n  cardId: {\r\n      type: String,\r\n      label: \"Id\",\r\n      regEx: SimpleSchema.RegEx.Id\r\n  },\r\n  cardTitle: {\r\n      type: String,\r\n      label: \"Title\",\r\n      required: true\r\n  },\r\n  cardDescription: {\r\n      type: String,\r\n      label: \"Description\",\r\n      defaultValue: []\r\n  },\r\n  cardTag: {\r\n      type: Array,\r\n      label: \"Tags\",\r\n      defaultValue: []\r\n  },\r\n  'cardTag.$': Object, //se if need to replace Object with a schema\r\n  cardComment: {\r\n      type: Array,\r\n      label: \"Comments\",\r\n      defaultValue: []\r\n  },\r\n  'cardComment.$': Object, //se if need to replace Object with a schema\r\n  cardAttachment: {\r\n      type: Array,\r\n      label: \"Attachments\",\r\n      defaultValue: []\r\n  },\r\n  'cardAttachment.$': Object, //se if need to replace Object with a schema\r\n  cardChecklist: {\r\n      type: Array,\r\n      label: \"CheckLists\",\r\n      defaultValue: []\r\n  },\r\n  'cardChecklist.$': Object, //se if need to replace Object with a schema\r\n  listCreatedAt:{\r\n    type: Date,\r\n    autoValue: function(){return new Date();}\r\n}\r\n});\r\n\r\nCards.attachSchema(CardSchema);","import SimpleSchema from 'simpl-schema';\r\n\r\nimport { Mongo } from 'meteor/mongo'\r\nimport {CardSchema} from \"./Card\";\r\n\r\nexport const Lists = new Mongo.Collection('lists')\r\n\r\nexport const ListSchema = new SimpleSchema({\r\n  listId: {\r\n    type: String,\r\n    label: \"Id\",\r\n    regEx: SimpleSchema.RegEx.Id\r\n  },\r\n  listTitle: {\r\n    type: String,\r\n    label: \"Title\",\r\n    required: true\r\n  },\r\n  listCard:{\r\n    type: Array,\r\n    label: \"Cards\",\r\n    defaultValue: []\r\n  },\r\n  'listCard.$': CardSchema, //se if need to replace Object with a schema\r\n  listCreatedAt:{\r\n    type: Date,\r\n    autoValue: function(){return new Date();}\r\n}\r\n});\r\n\r\nLists.attachSchema(ListSchema);","import { Mongo } from 'meteor/mongo'\r\nimport SimpleSchema from 'simpl-schema';\r\nimport {UserSchema} from './Users.js'\r\n\r\nexport const Team = new Mongo.Collection('teams');\r\n\r\nconst TeamSchema = new SimpleSchema({\r\n    teamName: {\r\n        type: String,\r\n        label: \"Name\",\r\n    },\r\n    teamDescription: {\r\n        type: String,\r\n        label: \"Description\",\r\n        defaultValue: \"\" \r\n    },\r\n    teamOwner : {\r\n        type: String,\r\n        label: \"Owner\"\r\n    },\r\n    teamMembers:{\r\n        type: Array,\r\n        label : \"Members\",\r\n        defaultValue: []\r\n    },\r\n    'teamMembers.$': UserSchema\r\n});\r\n\r\n\r\nTeam.attachSchema(TeamSchema);","import SimpleSchema from 'simpl-schema';\r\n\r\nconst UserProfileSchema = new SimpleSchema({\r\n    firstname: {\r\n        type: String,\r\n        optional: true\r\n    },\r\n    lastname: {\r\n        type: String,\r\n        optional: true\r\n    },\r\n    email : {\r\n        type: String,\r\n        optional: true\r\n    },\r\n    ennabledMails: {\r\n        type: Boolean,\r\n        optional: true\r\n    }\r\n});\r\n\r\nexport const UserSchema = new SimpleSchema({\r\n    username: {\r\n        type: String,\r\n        // For accounts-password, either emails or username is required, but not both. It is OK to make this\r\n        // optional here because the accounts-password package does its own validation.\r\n        // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\r\n        optional: true\r\n    },\r\n    emails: {\r\n        type: Array,\r\n        // For accounts-password, either emails or username is required, but not both. It is OK to make this\r\n        // optional here because the accounts-password package does its own validation.\r\n        // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\r\n        optional: true\r\n    },\r\n    \"emails.$\": {\r\n        type: Object\r\n    },\r\n    \"emails.$.address\": {\r\n        type: String,\r\n        regEx: SimpleSchema.RegEx.Email\r\n    },\r\n    \"emails.$.verified\": {\r\n        type: Boolean\r\n    },\r\n    // Use this registered_emails field if you are using splendido:meteor-accounts-emails-field / splendido:meteor-accounts-meld\r\n    registered_emails: {\r\n        type: Array,\r\n        optional: true\r\n    },\r\n    'registered_emails.$': {\r\n        type: Object,\r\n        blackbox: true\r\n    },\r\n    createdAt: {\r\n        type: Date\r\n    },\r\n    profile: {\r\n        type: UserProfileSchema,\r\n        optional: true\r\n    },\r\n    // Make sure this services field is in your schema if you're using any of the accounts packages\r\n    services: {\r\n        type: Object,\r\n        optional: true,\r\n        blackbox: true\r\n    },\r\n    // Add `roles` to your schema if you use the meteor-roles package.\r\n    // Option 1: Object type\r\n    // If you specify that type as Object, you must also specify the\r\n    // `Roles.GLOBAL_GROUP` group whenever you add a user to a role.\r\n    // Example:\r\n    // Roles.addUsersToRoles(userId, [\"admin\"], Roles.GLOBAL_GROUP);\r\n    // You can't mix and match adding with and without a group since\r\n    // you will fail validation in some cases.\r\n    roles: {\r\n        type: Object,\r\n        optional: true,\r\n        blackbox: true\r\n    },\r\n    // Option 2: [String] type\r\n    // If you are sure you will never need to use role groups, then\r\n    // you can specify [String] as the type\r\n    roles: {\r\n        type: Array,\r\n        optional: true\r\n    },\r\n    'roles.$': {\r\n        type: String\r\n    },\r\n    // In order to avoid an 'Exception in setInterval callback' from Meteor\r\n    heartbeat: {\r\n        type: Date,\r\n        optional: true\r\n    }\r\n});\r\n\r\nMeteor.users.attachSchema(UserSchema);","import { Meteor } from 'meteor/meteor';\r\n\r\nimport './api/users.js';\r\nimport './api/boards';\r\nimport './api/lists';\r\nimport './api/teams' \r\n\r\nMeteor.startup(() => {\r\n\r\n});"]}